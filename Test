// Pointcut for MongoTemplate methods, capturing MongoDB operations
    @Pointcut("execution(* org.springframework.data.mongodb.core.MongoTemplate.*(..))")
    public void mongoTemplateMethods() {}

    @Around("mongoTemplateMethods()")
    public Object traceMongoOperation(ProceedingJoinPoint joinPoint) throws Throwable {
        String methodName = joinPoint.getSignature().getName();
        Object[] args = joinPoint.getArgs();

        // Check if method has a MongoDB query (like find)
        if (args.length > 0 && args[0] instanceof Query) {
            Query query = (Query) args[0];
            // Start an APM span to trace the MongoDB operation
            Span span = ElasticApm.currentTransaction().startSpan("db", "mongodb", methodName);
            span.setName("MongoDB " + methodName);
            span.setLabel("query", query.toString());

            try {
                // Proceed with the original method
                Object result = joinPoint.proceed();
                span.end();  // End the span after operation is completed
                return result;
            } catch (Exception e) {
                span.captureException(e); // Capture any exception
                span.end();
                throw e;  // Rethrow the exception
            }
        } else {
            // If there is no query, just proceed with the original method
            return joinPoint.proceed();
        }
    }
