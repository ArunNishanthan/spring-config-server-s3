#!/bin/bash

# Define the OpenShift cluster URLs and corresponding namespaces
declare -A CLUSTERS
CLUSTERS["https://cluster1.openshift.com:8443"]="namespace1 namespace2"
CLUSTERS["https://cluster2.openshift.com:8443"]="namespace3 namespace4"

# Define tokens for each cluster (replace with your actual tokens)
declare -A TOKENS
TOKENS["https://cluster1.openshift.com:8443"]="your-cluster1-token"
TOKENS["https://cluster2.openshift.com:8443"]="your-cluster2-token"

# Define the label selector (replace with your actual label selector)
LABEL_SELECTOR="your-label-key=your-label-value"

# Function to fetch and process logs for pods
fetch_and_process_logs() {
    local cluster_url=$1
    local namespace=$2
    local token=$3

    # Get the list of pods in the current namespace with the specific label
    local api_url="$cluster_url/api/v1/namespaces/$namespace/pods?labelSelector=$LABEL_SELECTOR"
    local pods_json=$(curl -s -H "Authorization: Bearer $token" -k $api_url)

    # Extract pod names using awk
    local pod_names=$(echo "$pods_json" | awk -F '"' '/"metadata":/{getline;print $4}')

    # Loop through each pod and fetch logs
    for pod in $pod_names; do
        local log_url="$cluster_url/api/v1/namespaces/$namespace/pods/$pod/log"
        echo "Logs for pod: $pod in namespace: $namespace on cluster: $cluster_url"
        local logs=$(curl -s -H "Authorization: Bearer $token" -k $log_url)
        local log_file="${cluster_url//[:\/]/_}_${namespace}_${pod}.log"
        echo "$logs" > "$log_file"
        echo "Logs saved to $log_file"
    done
}

# Loop through each cluster
for cluster_url in "${!CLUSTERS[@]}"; do
    echo "Processing cluster: $cluster_url"
    local token=${TOKENS[$cluster_url]}
    
    # Get the namespaces for the current cluster
    local namespaces=${CLUSTERS[$cluster_url]}
    
    # Loop through each namespace in the current cluster
    for namespace in $namespaces; do
        echo "Fetching pods for namespace: $namespace in cluster: $cluster_url"
        
        # Fetch and process logs for pods
        fetch_and_process_logs "$cluster_url" "$namespace" "$token"
    done
done
